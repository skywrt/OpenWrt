#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#

name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 16 * * *


env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-23.05
  FEEDS_CONF: original/feeds.conf.default
  CONFIG_FILE: original/Build-x86.config
  DIY_P1_SH: original/diy-part1.sh
  DIY_P2_SH: original/diy-x86.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: false

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j16
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: original
        prefix: ${{ github.workspace }}/openwrt

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "{status}={success}" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

#    - name: Prepare artifact
#      run: |
#        cd ./openwrt/bin
#        mkdir -p ./firmware
#        rm -rf $(find ../bin/targets/ -name "packages" -o -name "*.buildinfo" -o -name "sha256sums" -o -name "*.manifest")
#        cp -rf $(find ../bin/targets/ -type f) ./firmware/

#    - name: Deliver firmware
#      uses: actions/upload-artifact@v4
#      with:
#        name: x86_firmware ${{ env.FILE_DATE }}
#        path: ./openwrt/bin/firmware/

    - name: Organize files
      id: organize
      run: |
        cd ./openwrt/bin
        mkdir -p ./firmware
        rm -rf $(find ../bin/targets/ -name "packages" -o -name "*.buildinfo" -o -name "sha256sums" -o -name "*.manifest")
        cp -rf $(find ../bin/targets/ -type f) ./firmware/
        cd openwrt/bin/firmware/
        rm -rf openwrt-x86-64-generic-kernel.bin openwrt-x86-64-generic-squashfs-rootfs.img.gz
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "{status}={success}" >> $GITHUB_OUTPUT

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: x86-Original ${{ env.PRODUCT_NAME }}${{ env.DATE }}
        tag: x86-Original
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        removeArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          * 这是 x86-original 精简固件
          * Default IP: 192.168.1.1
          * Default username: root
          * Default password: password
